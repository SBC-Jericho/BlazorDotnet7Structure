@page "/chat"
@inject NavigationManager NavigationManager
@rendermode InteractiveWebAssembly

<h3>Chat</h3>

<MudCard>
    <MudCardContent>
@if (isConnected)
{

    <MudTextField 
        Variant="Variant.Outlined"
        @bind-Value="userInput" 
        Label="User Input" 
    />

    <MudTextField 
        Variant="Variant.Outlined"
        @bind-Value="messageInput" 
        Label="Message Input" 
    />

    <MudButton @onclick="Send" Variant="Variant.Filled">Send</MudButton>

    <MudList Id="messagesList">
        @foreach (var message in messages)
        {
            <MudListItem>@message
            </MudListItem>
        }
    </MudList>
}
else
{
    <span>Connecting....</span>

}
    </MudCardContent>
</MudCard>
@code {
    private HubConnection hubConnection;
    private List<string> messages = new List<string>();
    private string userInput;
    private string messageInput;

    protected override async Task OnInitializedAsync() 
    {
        hubConnection = new HubConnectionBuilder()
        .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
        .Build();

        hubConnection.On<string, string>("ReceivedMessage", (user, message) =>
        {
            var encodeMessage = $"{user}: {message}";
            messages.Add(encodeMessage);
            StateHasChanged();

        });

        await hubConnection.StartAsync();
    }

    Task Send() => hubConnection.SendAsync("SendMessage", userInput, messageInput);

    public bool isConnected => hubConnection.State == HubConnectionState.Connected;
}
    